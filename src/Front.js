import "./Front.css";
import {
    collection,
    doc,
    getDocs,
    limit,
    orderBy,
    query,
    setDoc,
} from "firebase/firestore";
import { useCallback, useContext, useEffect, useMemo, useState } from "react";
import PerformanceRadarChart from "./PerformanceRadarChart";
import { dayToDateTimeObj, toDateString } from "./utils/day-to-date-time-obj";
import { debounce } from "./utils/debounce.js";
import { tsToDays } from "./utils/current-day";
import AuthContext from "./contexts/AuthContext";
import firebase from "firebase/compat/app";
import { ui } from "./bootstrap";

function Front({ db, currentDay }) {
    const { user, auth, isLoading: isAuthLoading } = useContext(AuthContext);
    const [isSaving, setIsSaving] = useState(false);

    const [entries, setEntries] = useState(null);
    // Header stuff
    const totalDays = useMemo(() => {
        // 72 Georgian average lifetime
        return 365 * 72;
    }, []);
    const daysPassed = useMemo(() => {
        return currentDay - tsToDays(629775360000);
    }, [currentDay]);
    const daysLeft = useMemo(() => {
        return totalDays - daysPassed;
    }, [daysPassed, totalDays]);

    // Header stuff end
    const list = useMemo(() => {
        const mapForUI = ({ day, content }) => ({
            day,
            dateString: toDateString(dayToDateTimeObj(day)),
            content,
        });

        if (!entries || !entries[0]) {
            return [mapForUI({ day: currentDay })];
        }

        const res = [];
        entries.forEach((entry) => {
            res.push(mapForUI(entry));
        });

        if (entries[0].day < currentDay) {
            for (let i = entries[0].day + 1; i <= currentDay; i++) {
                res.unshift(mapForUI({ day: i }));
            }
        }

        return res;
    }, [entries, currentDay]);

    useEffect(() => {
        if (db && !isAuthLoading && user) {
            const q = query(
                collection(db, "days"),
                orderBy("day", "desc"),
                limit(10)
            );
            getDocs(q).then((snapshot) => {
                const entries = [];
                snapshot.forEach((doc) => {
                    entries.push(doc.data());
                });
                setEntries(entries);
            });
        }
    }, [db, isAuthLoading, user]);

    // eslint-disable-next-line react-hooks/exhaustive-deps
    const setDocInDB = useCallback(
        debounce(async (day, value) => {
            await setDoc(doc(db, "days", String(day)), {
                day,
                content: value,
            });
            setIsSaving(false);
        }, 10000),
        [db]
    );

    const hangleChange = useCallback(
        (day) => (e) => {
            setIsSaving(true);
            setDocInDB(day, e.target.value);
        },
        [setDocInDB]
    );

    useEffect(() => {
        if (!isAuthLoading && (!user || ui.isPendingRedirect())) {
            ui.start("#firebaseui-auth-container", {
                signInOptions: [
                    // List of OAuth providers supported.
                    firebase.auth.GoogleAuthProvider.PROVIDER_ID,
                ],
            });
        }
    }, [user, isAuthLoading]);

    return (
        <>
            {!isAuthLoading && (
                <>
                    {(!user || ui.isPendingRedirect()) && (
                        <div id="firebaseui-auth-container"></div>
                    )}
                    {user && (
                        <div className="container">
                            <div className="header">
                                <button
                                    className="skull-button"
                                    onClick={() => auth.signOut()}
                                >
                                    <svg
                                        version="1.1"
                                        id="svg46584"
                                        width="800"
                                        height="800"
                                        viewBox="0 0 800 800"
                                        xmlns="http://www.w3.org/2000/svg"
                                        className="skull"
                                    >
                                        <defs id="defs46588">
                                            <clipPath
                                                clipPathUnits="userSpaceOnUse"
                                                id="clipPath46600"
                                            >
                                                <path
                                                    d="M 0,600 H 600 V 0 H 0 Z"
                                                    id="path46598"
                                                />
                                            </clipPath>
                                        </defs>
                                        <g
                                            id="g46592"
                                            transform="matrix(1.3333333,0,0,-1.3333333,0,800)"
                                        >
                                            <g id="g46594">
                                                <g
                                                    id="g46596"
                                                    clipPath="url(#clipPath46600)"
                                                >
                                                    <g
                                                        id="g46602"
                                                        transform="translate(255.2324,71.7783)"
                                                    >
                                                        <path
                                                            d="M 0,0 C -0.006,0.012 -0.009,0.04 -0.012,0.07 0.006,0.004 0.01,-0.025 0,0 m -101.87,143.974 c -6.322,-1.177 -15.28,1.583 -16.401,3.105 -1.598,25.8 -6.946,35.247 -9.592,43.288 1.407,-0.098 2.974,-0.264 4.639,-0.491 10.896,-23.256 5.493,-39.763 12.976,-40.648 3.043,-0.358 7.418,-2.657 11.782,-4.296 -1.158,-0.414 -2.304,-0.753 -3.404,-0.958 m 29.414,5.873 c 12.473,7.994 12.334,28.889 -20.372,45.44 l -10e-4,-0.014 c -17.718,6.784 -42.086,3.644 -47.577,-0.982 -1.811,-1.526 -2.58,-6.194 3.482,-9.239 9.031,-4.536 8.515,-28.708 7.036,-37.786 -0.674,-4.151 1.832,-9.205 6.386,-12.874 2.777,-2.238 9.455,-6.409 19.519,-5.204 2.747,0.331 5.746,1.059 8.987,2.338 6.303,2.487 10.846,7.129 13.5,13.796 3.464,8.698 3.033,19.159 1.292,27.637 8.475,-4.072 11.673,-14.83 7.748,-23.112 m 6.248,54.528 c -27.627,10.882 -32.932,23.516 -54.399,25.384 15.619,9.672 35.683,-13.467 43.578,-3.422 7.896,10.045 -3.054,34.167 11.624,45.458 -2.938,-18.875 -1.652,-52 14.407,-42.672 11.748,6.823 53.198,13.103 68.52,4.188 -21.795,2.915 -61.483,-4.875 -83.73,-28.936 m 55.647,-50.321 c -3.287,0.277 -8.906,6.204 -16.7,17.617 -1.272,1.866 -2.373,3.476 -3.409,4.823 -2.378,3.089 1.522,7.326 4.193,9.673 0.75,-7.727 6.752,-17.548 11.141,-23.25 3.607,-4.688 17.489,-5.47 30.49,-4.124 -10.131,-3.662 -20.838,-5.149 -25.715,-4.739 m 21.249,59.437 c -26.819,-2.128 -48.277,-12.805 -54.668,-27.204 -2.866,-6.452 -2.133,-13.006 2.059,-18.454 0.79,-1.026 1.784,-2.481 2.935,-4.166 5.817,-8.52 15.554,-22.776 27.234,-23.761 10.352,-0.87 32.197,3.086 47.218,13.169 6.708,4.503 12.055,10.228 14.409,17.289 l 0.061,0.276 c 0.087,0.868 2.043,21.397 -10.166,33.892 -6.781,6.938 -16.566,9.952 -29.082,8.959 M -37.99,88.392 c -2.612,-2.152 -4.156,-3.914 -7.084,-3.737 -3.638,0.221 -17.252,32.222 -17.577,32.624 -0.46,-1.608 5.506,-34.76 4.658,-34.862 -7.996,-0.958 -10.844,4.329 -12.445,7.777 l -0.736,2.752 c -2.525,5.438 -2.573,12.112 -2.619,18.566 -0.031,4.196 3.921,33.51 7.064,31.221 35.276,-25.694 35.2,-49.021 28.739,-54.341 m 160.589,32.893 c -2.871,-2.541 -5.286,-0.627 -10.046,3.59 -1.149,1.017 -2.396,2.114 -3.747,3.185 7.151,4.755 14.801,10.043 20.363,16.511 12.065,14.032 22.291,29.802 29.632,47.055 4.281,10.057 7.365,20.511 9.303,31.197 1.867,10.682 2.572,21.677 1.13,32.528 -0.694,5.112 -1.882,10.188 -3.78,14.98 -0.499,1.97 -1.074,3.91 -1.713,5.818 -3.496,10.435 -8.753,20.036 -15.121,28.705 -6.365,8.679 -13.979,16.354 -22.447,22.799 -8.445,6.485 -17.902,11.525 -27.779,15.114 9.557,-4.389 18.434,-10.12 26.136,-17.104 7.724,-6.948 14.437,-14.947 19.818,-23.704 5.381,-8.737 9.557,-18.203 11.956,-27.959 1.198,-4.868 1.921,-9.819 1.951,-14.653 0.043,-1.485 -0.035,-2.944 -0.17,-4.383 -0.437,2.601 -1.026,5.224 -1.683,7.515 -0.313,1.124 -0.65,2.236 -1.007,3.338 -3.215,9.884 -8.026,19.032 -13.899,27.329 -5.893,8.373 -12.991,15.833 -20.986,22.08 -4.024,3.168 -8.303,5.98 -12.772,8.418 -4.391,2.396 -8.961,4.434 -13.629,6.123 4.589,-2.121 9.005,-4.577 13.18,-7.357 4.102,-2.734 7.962,-5.786 11.534,-9.132 6.231,-5.814 11.655,-12.392 16.157,-19.504 0.768,-1.211 1.509,-2.437 2.223,-3.679 3.566,-6.179 6.508,-12.711 8.669,-19.442 0.809,-2.32 1.518,-5.273 2.099,-7.64 0.397,-1.616 0.743,-3.646 1.012,-5.274 0.369,-2.359 0.614,-4.722 0.72,-7.081 0.027,-0.582 0.046,-1.163 0.055,-1.742 0.03,-0.828 0.028,-1.651 0.008,-2.474 -0.025,-0.679 -0.065,-1.358 -0.112,-2.037 -0.428,2.752 -1.051,5.712 -1.684,7.927 -0.287,1.06 -0.597,2.11 -0.924,3.153 -2.934,9.332 -7.297,18.026 -12.675,25.953 -5.42,8.064 -12,15.311 -19.525,21.36 -3.783,3.062 -7.825,5.782 -12.06,8.123 -4.17,2.305 -8.516,4.246 -12.961,5.846 4.356,-2.028 8.536,-4.38 12.472,-7.054 3.87,-2.635 7.488,-5.588 10.818,-8.817 5.863,-5.694 10.848,-12.148 14.934,-19.083 0.696,-1.18 1.367,-2.375 2.012,-3.581 3.213,-6.006 5.826,-12.333 7.73,-18.84 0.706,-2.032 1.338,-5.295 1.848,-7.366 0.347,-1.414 0.657,-3.647 0.893,-5.07 0.326,-2.262 0.548,-4.528 0.663,-6.807 0.032,-0.555 0.051,-1.11 0.068,-1.666 0.034,-0.789 0.045,-1.576 0.043,-2.371 -0.013,-0.787 -0.039,-1.584 -0.07,-2.381 -0.404,2.834 -1.091,6.327 -1.702,8.454 -0.261,0.998 -0.54,1.986 -0.836,2.968 -2.653,8.782 -6.569,17.021 -11.452,24.576 -4.945,7.758 -11.009,14.79 -18.065,20.642 -3.542,2.956 -7.344,5.584 -11.347,7.828 -3.947,2.211 -8.072,4.058 -12.292,5.568 4.119,-1.934 8.065,-4.184 11.763,-6.752 3.638,-2.536 7.015,-5.39 10.103,-8.502 5.492,-5.575 10.041,-11.905 13.709,-18.66 0.625,-1.15 1.225,-2.311 1.799,-3.484 2.865,-5.833 5.145,-11.955 6.794,-18.239 0.605,-1.74 1.159,-5.317 1.597,-7.091 0.296,-1.211 0.571,-3.647 0.773,-4.867 0.287,-2.161 0.484,-4.332 0.607,-6.528 0.034,-0.532 0.057,-1.061 0.079,-1.592 0.041,-0.751 0.061,-1.504 0.081,-2.269 0.006,-1.071 -0.001,-2.174 0.024,-3.295 -0.287,2.605 -1.152,7.395 -1.769,9.55 -0.236,0.934 -0.486,1.861 -0.75,2.783 -2.374,8.23 -5.842,16.016 -10.231,23.201 -4.473,7.45 -10.018,14.268 -16.604,19.92 -3.304,2.852 -6.865,5.388 -10.635,7.536 -3.726,2.117 -7.63,3.869 -11.622,5.289 3.884,-1.841 7.593,-3.989 11.053,-6.45 3.409,-2.435 6.542,-5.191 9.387,-8.188 5.124,-5.453 9.238,-11.659 12.486,-18.239 0.553,-1.118 1.084,-2.245 1.586,-3.385 2.516,-5.658 4.463,-11.576 5.857,-17.637 0.504,-1.451 0.98,-5.338 1.346,-6.816 0.248,-1.01 0.485,-3.647 0.654,-4.664 0.246,-2.062 0.42,-4.136 0.552,-6.253 0.034,-0.505 0.061,-1.008 0.089,-1.515 0.045,-0.713 0.079,-1.432 0.118,-2.167 0.019,-0.698 0.045,-1.421 0.083,-2.157 -0.066,-0.067 -0.13,-0.134 -0.195,-0.201 -0.275,2.302 -1.128,7.114 -1.609,8.795 -0.208,0.871 -0.43,1.737 -0.664,2.599 -2.091,7.679 -5.113,15.011 -9.007,21.824 -3.999,7.143 -9.026,13.747 -15.143,19.202 -3.065,2.746 -6.386,5.19 -9.922,7.24 -3.505,2.025 -7.188,3.681 -10.955,5.012 3.647,-1.746 7.126,-3.791 10.343,-6.146 3.179,-2.336 6.073,-4.994 8.673,-7.875 4.757,-5.333 8.431,-11.414 11.262,-17.818 0.482,-1.086 0.94,-2.181 1.375,-3.286 2.166,-5.487 3.781,-11.198 4.919,-17.036 0.403,-1.16 0.803,-5.357 1.094,-6.541 0.198,-0.808 0.4,-3.648 0.536,-4.461 0.205,-1.962 0.356,-3.939 0.494,-5.977 0.037,-0.479 0.068,-0.956 0.099,-1.439 0.052,-0.674 0.097,-1.356 0.158,-2.065 0.011,-0.234 0.033,-0.486 0.049,-0.728 -0.116,-0.122 -0.231,-0.243 -0.346,-0.364 -0.308,2.205 -1.066,6.549 -1.399,7.712 -0.182,0.808 -0.375,1.611 -0.578,2.414 -1.808,7.128 -4.385,14.007 -7.784,20.449 -3.525,6.834 -8.037,13.224 -13.683,18.481 -2.824,2.641 -5.906,4.992 -9.21,6.946 -3.282,1.932 -6.744,3.491 -10.287,4.732 3.413,-1.653 6.657,-3.594 9.635,-5.842 2.948,-2.237 5.6,-4.795 7.959,-7.561 4.388,-5.213 7.624,-11.17 10.037,-17.395 0.411,-1.055 0.799,-2.118 1.163,-3.189 1.818,-5.313 3.1,-10.819 3.982,-16.434 0.304,-0.87 0.624,-5.378 0.843,-6.266 0.148,-0.606 0.314,-3.647 0.417,-4.257 0.165,-1.864 0.293,-3.744 0.438,-5.701 0.039,-0.453 0.073,-0.905 0.11,-1.363 0.041,-0.463 0.09,-0.946 0.14,-1.426 -0.142,-0.151 -0.284,-0.304 -0.426,-0.454 -0.323,2.131 -0.985,6.002 -1.19,6.719 -0.154,0.745 -0.32,1.488 -0.49,2.229 -1.53,6.577 -3.66,13.002 -6.563,19.073 -3.053,6.527 -7.046,12.703 -12.223,17.761 -2.583,2.535 -5.424,4.795 -8.499,6.652 -3.058,1.838 -6.297,3.303 -9.616,4.454 3.178,-1.558 6.186,-3.397 8.926,-5.539 2.719,-2.137 5.126,-4.597 7.243,-7.247 4.021,-5.091 6.82,-10.924 8.815,-16.974 0.338,-1.023 0.655,-2.053 0.95,-3.09 1.468,-5.14 2.419,-10.441 3.045,-15.832 0.2,-0.581 0.444,-5.4 0.591,-5.992 0.098,-0.405 0.228,-3.648 0.295,-4.054 0.125,-1.765 0.23,-3.548 0.384,-5.424 0.041,-0.428 0.078,-0.854 0.121,-1.288 0.007,-0.061 0.018,-0.129 0.025,-0.19 -0.151,-0.16 -0.304,-0.325 -0.451,-0.484 -0.326,2.054 -0.892,5.466 -0.987,5.797 -0.129,0.682 -0.263,1.363 -0.405,2.045 -1.248,6.026 -2.931,11.997 -5.339,17.697 -2.579,6.22 -6.055,12.18 -10.762,17.041 -2.343,2.431 -4.947,4.598 -7.787,6.357 -2.836,1.746 -5.855,3.116 -8.948,4.177 2.943,-1.465 5.716,-3.202 8.217,-5.237 2.487,-2.037 4.654,-4.398 6.529,-6.932 3.651,-4.971 6.013,-10.68 7.589,-16.553 0.269,-0.992 0.516,-1.989 0.739,-2.991 1.117,-4.967 1.738,-10.063 2.108,-15.231 0.099,-0.291 0.265,-5.421 0.339,-5.717 0.048,-0.202 0.144,-3.648 0.177,-3.851 0.085,-1.665 0.166,-3.351 0.327,-5.149 0.009,-0.082 0.019,-0.166 0.029,-0.248 -0.154,-0.164 -0.31,-0.333 -0.457,-0.493 l -0.788,4.938 c -1.016,6.082 -2.307,12.249 -4.437,18.181 -2.105,5.913 -5.063,11.659 -9.301,16.322 -2.104,2.324 -4.466,4.4 -7.075,6.062 -2.614,1.654 -5.412,2.927 -8.279,3.899 2.707,-1.371 5.245,-3.005 7.509,-4.934 2.255,-1.938 4.18,-4.2 5.812,-6.618 3.282,-4.851 5.207,-10.436 6.365,-16.131 1.172,-5.713 1.559,-11.579 1.698,-17.523 l 0.121,-7.502 c -0.434,1.079 -0.826,2.246 -1.173,3.481 -0.636,2.259 -1.131,4.732 -1.682,7.272 -1.05,5.089 -2.207,10.513 -4.217,15.742 -2.003,5.218 -4.912,10.209 -8.739,14.214 -1.899,2.011 -4.004,3.775 -6.203,5.329 -2.233,1.517 -4.561,2.823 -6.965,3.916 3.888,-3.577 7.251,-7.525 9.737,-11.827 2.483,-4.315 4.031,-8.944 4.895,-13.735 0.902,-4.797 1.128,-9.75 1.446,-14.986 0.149,-2.626 0.342,-5.323 0.759,-8.171 0.437,-2.837 1.017,-5.856 2.356,-8.936 l 0.525,-1.151 0.135,-0.288 0.27,-0.479 c 0.191,-0.33 0.386,-0.63 0.584,-0.896 0.301,-0.416 0.609,-0.779 0.916,-1.12 -7.045,-11.066 -18.503,-18.902 -36.373,-25.304 -18.699,-7.01 -43.951,-9.869 -45.976,-9.246 15.772,-4.03 40.06,-2.171 50.851,-1.041 l 0.097,-0.017 c 0,0 0.133,0.025 0.38,0.067 3.136,0.335 25.378,3.208 36.81,2.261 2.442,-0.165 3.841,-0.647 5.996,-1.364 3.832,-1.276 7.779,-3.979 8.449,-8.266 C 94.829,114.631 91.5,107.042 72.19,92.923 59.77,83.839 48.559,79.439 38.795,79.787 c -1.74,0.518 -3.48,1.209 -5.203,2.077 -7.065,3.53 -13.643,9.49 -19.976,15.781 -6.366,6.319 -12.602,13.145 -19.72,19.129 -3.56,2.978 -7.363,5.735 -11.492,7.882 -4.117,2.15 -8.583,3.64 -13.113,4.087 4.411,-1.141 8.441,-3.243 12.012,-5.871 3.578,-2.632 6.737,-5.766 9.666,-9.102 2.225,-2.548 24.435,-33.051 29.172,-36.834 2.106,-2.041 4.362,-4.005 6.87,-5.796 0.132,-0.096 0.271,-0.186 0.405,-0.28 C 26.265,69.721 25.019,68.034 23.701,65.607 20.668,67.596 13.717,71.199 11.75,70.64 10.456,70.275 9.736,67.057 9.674,63.092 L 4.098,74.583 5.711,62.877 c -1.093,0.738 -2.517,1.489 -4.482,2.21 -0.014,0.005 -1.616,0.239 -1.631,0.237 -0.805,-0.096 -1.842,-0.862 -2.705,-2.421 l -8.187,21.729 2.579,-21.523 c -2.139,1.161 -4.183,1.548 -5.42,1.161 -1.822,-0.568 -2.883,-3.237 -3.496,-6.442 -1.941,5.656 -6.324,18.632 -7.416,23.662 -0.73,-7.657 0.652,-18.079 1.557,-23.699 -3.291,3.504 -6.739,6.336 -8.807,5.501 -1.072,-0.432 -2.415,-2.595 -3.119,-5.549 l -5.355,20.075 0.535,-20.128 c -1.494,1.684 -3.012,2.83 -4.332,2.672 -0.071,-0.009 -0.139,-0.018 -0.209,-0.032 -0.942,-0.182 -1.607,-1.029 -2.072,-2.334 l -4.764,17.061 0.476,-19.106 c -1.445,2.007 -2.962,3.014 -4.564,3.038 -1.676,0.024 -3.21,-0.995 -4.66,-3.122 -0.04,4.768 -0.154,14.44 -0.414,14.571 l -3.972,-11.659 c -1.458,1.745 -3.335,3.587 -5.163,3.693 -1.252,0.076 -3.906,-4.468 -4.887,-5.021 0.402,1.762 -0.709,15.268 -3.883,23.163 -3.174,7.897 -12.988,3.08 -17.273,10.578 l 6.647,22.081 c 0,0 -5.29,-12.109 -16.728,-16.324 -7.199,-2.652 -21.263,3.294 -25.669,9.507 -5.221,7.364 -1.603,34.26 -1.508,39.816 0.229,13.451 0.513,30.189 -9.506,36.393 -20.642,12.78 -20.174,22.301 -17.237,38.388 5.76,6.034 15.339,9.083 20.263,9.173 -5.447,4.927 -12.533,4.386 -17.767,2.929 1.65,7.556 3.347,16.334 3.128,27.28 -0.605,30.166 5.624,59.985 28.031,78.293 1.677,1.369 4.51,4.656 6.868,7.46 8.993,-17.01 16.263,-30.32 18.516,-33.803 7.388,59.215 117.29,95.945 200.527,63.004 39.604,-15.673 62.361,-48.55 74.724,-78.891 20.432,-65.179 1.047,-128.495 -51.737,-175.213 M 12.543,43.294 C 11.02,43.657 9.822,44.411 8.215,43.916 6.924,43.519 5.734,42.806 4.534,42.197 4.252,42.055 3.955,41.908 3.639,41.915 3.25,41.925 2.898,42.172 2.666,42.484 2.262,43.029 1.957,43.721 1.59,44.305 0.09,46.69 -0.746,61.03 -0.732,61.029 1.643,60.971 10.301,52.031 11.221,49.078 c 0.559,-1.802 1.586,-3.849 1.322,-5.784 m 0.478,-7.481 c 0.579,-0.902 1.065,-1.866 1.426,-2.892 0.053,-0.161 0.094,-0.326 0.139,-0.489 l -0.064,0.003 C 14.504,32.047 14.467,31.669 14.434,31.288 13.658,22.182 9.887,17.087 5.967,16.268 3.364,15.729 2.291,25.082 2.629,26.449 2.975,27.888 3.168,29.35 3.291,30.82 5,30.427 6.604,30.619 8.786,33.314 c 1.095,1.354 2.451,2.27 3.935,2.915 0.097,-0.141 0.207,-0.271 0.3,-0.416 m 2.79,-3.439 v -0.001 0 z m 1.117,-4.512 c -0.002,-0.008 -0.002,-0.017 -0.002,-0.027 v 10e-4 L 16.92,27.835 c 0.004,0.009 0.004,0.018 0.008,0.027 m 0.686,18.856 c -0.744,1.968 -1.766,5.506 -2.815,7.308 -0.789,1.363 -3.403,11.142 -1.041,11.808 2.949,0.838 12.566,-10.814 12.915,-13.102 -0.137,-0.525 -8.8,-6.704 -9.059,-6.014 m 11.038,21.239 c 4.18,0.517 9.112,-10.947 9.135,-12.332 0.045,-2.491 -0.748,-2.477 -2.026,-2.302 -1.716,-0.415 -3.975,-1.666 -4.365,-1.684 -0.358,-0.017 -0.967,0.018 -1.15,0.501 -0.436,1.829 -0.706,2.163 -1.045,3.934 -0.316,1.654 -2.333,11.662 -0.549,11.883 m 2.419,-25.562 c 0.221,0.175 0.445,0.352 0.667,0.529 0.318,-1.293 0.593,-2.453 0.578,-2.617 -0.774,-9.107 -5.41,-16.221 -9.33,-17.04 -2.487,-0.515 -4.861,8.826 -4.669,9.742 0.277,1.417 0.367,2.878 0.306,4.333 -0.004,0.115 -0.025,0.23 -0.031,0.346 0.593,0.082 1.18,0.155 1.759,0.225 1.844,0.227 3.589,0.441 5.009,0.922 2.167,0.731 3.969,2.17 5.711,3.56 M 104.932,26.393 C 104.015,23.748 99.747,20.071 99.337,19.702 91.416,12.579 64.419,-3.594 46.857,-17.836 52.24,-4.161 64.311,21.264 76.443,33.532 58.107,24.673 35.659,-26.08 26.159,-33.731 15.928,-44.314 4.034,-42.155 -4.779,-41.03 c -3.83,0.489 -6.217,0.602 -10.275,3.84 -4.617,6.128 -10.731,13.309 -11.871,15.766 -1.891,-8.181 -1.87,-11.66 -3.225,-14.072 -5.579,-5.451 -14.657,-7.455 -16.998,-5.244 -2.998,2.835 -6.426,39.439 -11.247,46.774 0.428,-0.122 4.146,3.419 5.269,3.193 1.298,-0.263 1.149,-2.988 4.084,-3.364 0.378,-0.049 0.746,-0.039 1.101,0.004 1.049,0.125 1.811,1.829 2.589,2.643 1.53,-3.421 5.054,-11.332 5.1,-11.708 0.055,-0.433 -0.853,9.327 -0.393,12.542 0.575,-0.612 1.173,-1.132 1.774,-1.49 0.976,-0.582 2.174,-1.501 2.846,-1.421 0.35,0.042 0.654,0.136 0.904,0.247 1.705,0.745 2.65,2.349 3.66,3.173 l 5.02,-13.032 -0.449,15.018 c 1.681,-2.763 3.87,-6.463 5.476,-6.779 0.412,-0.081 0.813,-0.091 1.205,-0.043 1.605,0.191 2.303,3.753 3.53,4.922 0.302,0.287 0.57,0.581 0.831,0.877 0.382,-1.114 2.664,-7.896 3.69,-13.572 -0.28,1.429 0.98,16.999 0.98,16.999 l -0.019,0.025 c 1.551,-1.514 3.308,-4.443 4.843,-4.306 0.043,0.004 0.087,0.009 0.131,0.015 0.909,0.108 1.496,2.728 2.231,3.315 0.996,-3.269 3.746,-12.313 3.98,-13.222 -0.08,0.813 1.622,11.103 2.048,15.426 1.525,-0.911 4.404,-3.339 4.575,-3.303 2.674,0.56 4.413,2.803 6.604,6.494 0.432,-1.233 0.424,-8.596 2.599,-13.724 -0.525,2.108 1.651,14.329 1.778,17.582 1.992,-1.818 3.977,-2.063 5.375,-1.897 0.195,0.024 0.379,0.055 0.55,0.09 2.751,0.576 5.338,2.945 7.364,6.336 C 30.98,25.435 25.691,10.676 16.328,-0.113 12.022,-5.075 6.23,-8.9 -0.281,-10.697 c 6.666,1.154 12.679,4.869 17.908,9.149 5.237,4.354 9.873,9.396 14.089,14.739 4.2,5.363 8.026,11.021 11.451,16.95 1.71,2.967 3.328,5.997 4.808,9.14 0.29,0.633 9.254,18.436 8.336,24.031 0.01,1.687 -1.322,9.191 -1.322,9.191 6.015,1.255 12.251,2.264 16.272,4.286 0.007,-0.014 0.011,-0.03 0.017,-0.044 0.58,-1.115 4.368,-13.22 6.796,-32.332 2.13,3.607 4.355,35.069 4.175,35.897 0.909,5.232 3.595,10.253 4.967,11.775 3.304,3.659 9.908,7.766 13.528,4.191 4.072,-4.416 7.158,-61.31 4.188,-69.883 m -154.893,9.082 c -0.977,-0.093 -1.947,-0.205 -2.921,-0.33 -1.115,-0.145 -2.798,-0.774 -3.832,-0.136 -1.085,0.667 -0.822,1.386 -1.341,2.498 -0.853,1.827 -1.766,5.141 -1.865,7.156 -0.108,2.209 -0.372,3.736 0.59,5.696 0.757,1.542 1.6,3.318 2.86,4.527 0.144,0.138 0.363,0.38 0.584,0.378 2.017,-0.019 3.483,-2.602 4.291,-4.1 1.38,-2.556 2.352,-5.341 2.805,-8.212 0.233,-1.487 0.326,-2.999 0.259,-4.504 -0.057,-1.293 0.162,-2.823 -1.43,-2.973 m 5.654,-16.453 c 0.155,-0.539 -3.49,-10.1 -4.156,-9.225 -2.715,3.976 -4.777,13.648 -4.081,17.326 1.227,0.132 2.149,-0.448 3.547,-1.437 0.811,-0.576 1.718,-1.198 2.792,-1.631 1.473,1.196 1.479,-3.55 1.898,-5.033 m 9.198,13.917 c -0.301,-0.116 -0.637,-0.044 -0.954,0.022 -0.806,0.164 -1.728,0.089 -2.554,0.148 -0.49,0.036 -2.446,-0.048 -2.76,0.322 -0.725,0.855 -1.384,1.877 -1.934,3.022 -0.787,1.63 -1.375,3.471 -1.808,5.386 -0.599,9.763 1.353,14.137 1.373,14.14 1.842,0.307 7.697,-4.218 9.078,-14.965 0.078,-1.814 0.112,-3.611 0.039,-5.344 -0.025,-0.594 0.184,-2.474 -0.48,-2.731 m 15.996,4.953 c -0.082,-0.693 0.009,-1.89 -0.289,-2.508 -0.354,-0.733 -1.322,-0.359 -1.857,-0.067 -1.221,0.667 -2.578,0.792 -3.938,0.589 -1.137,-0.17 -2.519,-1.427 -3.486,-0.208 -0.421,0.531 -0.527,1.241 -0.649,1.91 -0.191,1.062 -0.8,1.923 -1.037,2.978 -1.246,5.559 -2.844,16.101 -0.761,16.94 3.498,1.41 12.63,-14.423 12.017,-19.634 m 3.297,-15.523 c 0.212,-0.625 -0.125,-4.323 -0.065,-4.427 -0.17,-2.248 -0.003,-3.685 -2.576,-6.131 -1.466,-1.395 -2.447,-1.949 -3.193,-1.809 -1.795,0.355 -4.445,9.083 -4.655,9.868 -0.535,2.008 -0.568,3.827 -0.64,5.275 2.131,-1.237 9.416,0.807 10.011,1.188 0.577,-1.214 0.694,-2.693 1.118,-3.964 m 13.345,8.358 c 0.018,-0.044 0.037,-0.086 0.055,-0.13 0.49,-1.307 0.908,-2.654 1.176,-4.021 0.129,-0.681 -0.51,-1.863 -0.444,-2.562 -1.079,-3.2 -2.521,-8.976 -5.127,-9.25 -0.847,-0.076 -1.948,0.456 -4.579,4.777 -0.875,2.284 -1.446,6.052 -0.166,7.677 1.349,-0.309 3.008,-0.551 5.245,1.142 1.53,1.157 2.784,1.9 3.84,2.367 m -1.476,8.932 c -0.039,-0.367 -0.096,-0.724 -0.151,-1.082 -1.392,-0.74 -2.607,-2.299 -3.181,-1.945 -1.905,1.167 -4.096,1.65 -6.262,0.705 -0.058,0.262 -0.113,0.524 -0.175,0.787 -0.282,1.24 -0.616,2.487 -0.983,3.73 -0.008,0.051 -0.011,0.097 -0.03,0.169 -2.275,8.837 -1.235,16.714 1.161,17.459 1.214,0.379 6.861,-7.207 9.716,-13.7 0.835,-1.897 0.116,-4.139 -0.095,-6.123 m -29.025,2.62 h 0.001 z m 0.609,-18.315 c 0.584,-1.154 1.588,-5.146 1.609,-5.789 0.1,-2.815 -1.318,-6.346 -4.857,-8.658 -0.09,-0.059 -5.176,4.016 -5.65,9.707 -0.135,1.627 0.099,2.768 0.073,4.396 2.196,0.557 3.465,0.821 4.922,0.471 1.235,-0.299 2.567,-0.614 3.903,-0.127 m -28.181,-9.089 c -2.263,3.479 -4.413,9.734 -2.973,11.65 0.708,0.937 3.374,1.212 5.152,0.719 1.017,-0.282 2.063,-0.542 3.089,-0.31 -0.48,-2.645 -1.128,-7.237 -0.777,-11.31 0.149,-1.726 -0.965,-4.017 -1.85,-3.621 -0.144,0.158 -0.292,0.313 -0.44,0.468 -0.613,0.776 -1.259,1.516 -1.972,2.174 -0.078,0.074 -0.152,0.155 -0.229,0.23 m -5.619,21.242 c -1.293,0.205 -3.191,0.278 -4.148,1.143 -1.525,1.375 -1.424,4.041 -1.845,5.989 -0.421,1.95 1.702,13.937 3.215,13.937 4.051,-1.825 4.786,-8.281 4.83,-12.041 0.03,-2.582 0.309,-5.175 0.413,-7.759 0.01,-0.22 0.017,-0.444 -0.035,-0.658 -0.251,-1.029 -1.681,-0.73 -2.43,-0.611 m -82.94,428.618 c 20.116,-41.807 56.419,-113.216 56.883,-114.131 l -6.902,-3.511 c -1.87,3.676 -36.142,71.093 -56.132,112.556 -4.698,-4.054 -9.193,-8.327 -13.446,-12.836 1.798,-8.083 23.423,-51.179 41.904,-86.599 -3.767,-4.111 -7.374,-8.401 -10.786,-12.869 -21.41,-28.037 -28.185,-57.921 -26.967,-83.518 0.664,-13.965 -3.221,-27.51 -4.956,-36.776 -3.598,-19.227 -7.99,-31.153 17.495,-48.202 0.013,-0.009 10.355,-11.069 8.927,-26.957 -0.563,-6.27 -0.199,-42.793 4.278,-50.836 6.597,-11.851 34.641,-10.4 52.101,-25.817 6.411,-5.661 3.886,-17.268 4.001,-20.008 0.02,-0.466 4.437,-3.869 4.425,-4.921 -0.156,-11.884 4.988,-20.907 5.713,-21.423 0.799,-7.708 0.469,-18.451 4.372,-22.779 11.339,-12.57 8.33,-49.27 16.404,-55.774 7.649,-6.163 22.893,4.417 29.385,3.274 3.22,-0.567 20.065,-8.806 34.059,-5.681 5.855,1.307 23.656,6.712 34.252,20.474 6.344,8.237 50.971,37.218 58.673,41.041 4.95,1.802 8.61,6.04 10.889,12.612 3.392,9.788 -4.093,73.424 -4.296,76.411 -0.34,4.984 -2.795,13.361 -2.551,14.677 2.943,-3.909 7.81,-7.984 15.3,-6.588 2.901,0.54 5.622,1.92 8.085,4.099 43.765,38.736 65.282,87.719 63.094,140.209 74.313,253.396 -210.222,319.962 -344.204,213.873"
                                                            id="path46604"
                                                        />
                                                    </g>
                                                </g>
                                            </g>
                                        </g>
                                    </svg>
                                </button>
                                <div className="author">
                                    <div>{user?.email}</div>
                                    <div>{daysPassed}</div>
                                </div>
                                <div className="progress">
                                    <div className="progress-numbers">
                                        <div>{daysPassed}</div>
                                        <div>{daysLeft}</div>
                                    </div>
                                    <div
                                        className="progress-inner"
                                        style={{
                                            width: `${
                                                (daysPassed / totalDays) * 100
                                            }%`,
                                        }}
                                    ></div>
                                </div>
                            </div>
                            <div className="list">
                                {list.map((entry) => (
                                    <div className="card" key={entry.day}>
                                        {isSaving && <div>Unsaved...</div>}
                                        <div
                                            className={`title ${
                                                entry.day === currentDay
                                                    ? "current"
                                                    : ""
                                            }`}
                                        >
                                            <h2>{entry.dateString}</h2>
                                            <h3 title={`Day ${entry.day}`}>
                                                {entry.day}
                                            </h3>
                                        </div>
                                        <textarea
                                            rows={6}
                                            className="content"
                                            disabled={
                                                entry.day < currentDay - 1
                                            }
                                            onChange={hangleChange(entry.day)}
                                            defaultValue={entry.content}
                                        />
                                    </div>
                                ))}
                            </div>
                            <div className="data">
                                <div className="month"></div>
                                <PerformanceRadarChart />
                            </div>
                        </div>
                    )}
                </>
            )}
        </>
    );
}

export default Front;
